// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnboardingApi.Persistence.Context;

#nullable disable

namespace OnboardingApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240513214944_initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnboardingApi.Domain.Models.Atividade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Classificacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComoFazer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Obrigatório")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UltimaAlteracao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("OnboardingApi.Domain.Models.AtividadeOnboarding", b =>
                {
                    b.Property<Guid>("OnboardingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtividadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentário")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusAtividade")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaAlteracao")
                        .HasColumnType("datetime2");

                    b.HasKey("OnboardingId", "AtividadeId");

                    b.HasIndex("AtividadeId");

                    b.ToTable("AtividadesOnboardings");
                });

            modelBuilder.Entity("OnboardingApi.Domain.Models.Onboarding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NovoTotverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PadrinhoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusOnboarding")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaAlteracao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NovoTotverId");

                    b.HasIndex("PadrinhoId");

                    b.ToTable("Onboardings");
                });

            modelBuilder.Entity("OnboardingApi.Domain.Models.Totver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlteradoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tribo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuarioRede")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Totvers");
                });

            modelBuilder.Entity("OnboardingApi.Domain.Models.AtividadeOnboarding", b =>
                {
                    b.HasOne("OnboardingApi.Domain.Models.Atividade", "Atividade")
                        .WithMany("Oboardings")
                        .HasForeignKey("AtividadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnboardingApi.Domain.Models.Onboarding", "Onboarding")
                        .WithMany("Atividades")
                        .HasForeignKey("OnboardingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atividade");

                    b.Navigation("Onboarding");
                });

            modelBuilder.Entity("OnboardingApi.Domain.Models.Onboarding", b =>
                {
                    b.HasOne("OnboardingApi.Domain.Models.Totver", "NovoTotver")
                        .WithMany()
                        .HasForeignKey("NovoTotverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnboardingApi.Domain.Models.Totver", "Padrinho")
                        .WithMany()
                        .HasForeignKey("PadrinhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NovoTotver");

                    b.Navigation("Padrinho");
                });

            modelBuilder.Entity("OnboardingApi.Domain.Models.Atividade", b =>
                {
                    b.Navigation("Oboardings");
                });

            modelBuilder.Entity("OnboardingApi.Domain.Models.Onboarding", b =>
                {
                    b.Navigation("Atividades");
                });
#pragma warning restore 612, 618
        }
    }
}
